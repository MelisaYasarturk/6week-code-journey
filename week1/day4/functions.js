// ============================================
// ðŸ§  JavaScript Fonksiyonlar - KullanÄ±ÅŸlÄ± Ã–rneklerle
// ============================================

// ðŸ”¹ 1. Function Declaration: KullanÄ±cÄ± KarÅŸÄ±lama
function karsilamaMesaji(isim, saat) {
    if (saat < 12) {
      console.log(`GÃ¼naydÄ±n, ${isim}!`);
    } else if (saat < 18) {
      console.log(`Ä°yi gÃ¼nler, ${isim}!`);
    } else {
      console.log(`Ä°yi akÅŸamlar, ${isim}!`);
    }
  }
  
  karsilamaMesaji("AyÅŸe", 10); // GÃ¼naydÄ±n, AyÅŸe!
  
  // ðŸ”¹ 2. Function Expression: Ä°ndirimli Fiyat Hesaplama
  const indirimliFiyat = function (fiyat, oran = 0.1) {
    return fiyat - fiyat * oran;
  };
  
  console.log("Ä°ndirimli Fiyat:", indirimliFiyat(100)); // 90
  
  // ðŸ”¹ 3. Arrow Function: KDV Hesaplama
  const kdvEkle = (tutar, oran = 0.2) => tutar + tutar * oran;
  
  console.log("KDV Dahil:", kdvEkle(150)); // 180
  
  // ðŸ”¹ 4. KullanÄ±cÄ± AdlarÄ±nÄ± Listeleme
  const yazdirKullanicilar = (kullanicilar) => {
    kullanicilar.forEach((kullanici, index) => {
      console.log(`${index + 1}. KullanÄ±cÄ±: ${kullanici}`);
    });
  };
  
  const isimler = ["Ali", "Zeynep", "Can"];
  yazdirKullanicilar(isimler);
  
  // ðŸ”¹ 5. Ortalama Not Hesaplama
  function ortalamaNot(notlar) {
    let toplam = 0;
    for (let not of notlar) {
      toplam += not;
    }
    return toplam / notlar.length;
  }
  
  const notlar = [70, 85, 90, 100];
  console.log("Ortalama:", ortalamaNot(notlar)); // 86.25
  
  // ðŸ”¹ 6. Åžifre GÃ¼Ã§lÃ¼lÃ¼ÄŸÃ¼ KontrolÃ¼
  const sifreGecerliMi = (sifre) => {
    return sifre.length >= 8 && /[A-Z]/.test(sifre) && /\d/.test(sifre);
  };
  
  console.log("Åžifre geÃ§erli mi?", sifreGecerliMi("Test1234")); // true
  
  // ðŸ”¹ 7. Mail DoÄŸrulama
  function emailGecerliMi(email) {
    const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return regex.test(email);
  }
  
  console.log("E-mail geÃ§erli mi?", emailGecerliMi("test@example.com")); // true
  
  // ðŸ”¹ 8. Tekrar Eden Karakterleri Sayma
  function tekrarSayisiBul(metin, harf) {
    let sayac = 0;
    for (let karakter of metin) {
      if (karakter.toLowerCase() === harf.toLowerCase()) {
        sayac++;
      }
    }
    return sayac;
  }
  
  console.log("a harfi sayÄ±sÄ±:", tekrarSayisiBul("Ankara", "a")); // 3
  
  // ðŸ”¹ 9. SayÄ±yÄ± BasamaklarÄ±na AyÄ±rma
  const basamakAyir = (sayi) => sayi.toString().split("").map(Number);
  
  console.log(basamakAyir(12345)); // [1, 2, 3, 4, 5]
  
  // ðŸ”¹ 10. Rastgele Åžifre Ãœretici
  function rastgeleSifreUret(uzunluk = 8) {
    const karakterler = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    let sifre = "";
    for (let i = 0; i < uzunluk; i++) {
      const rastgeleIndex = Math.floor(Math.random() * karakterler.length);
      sifre += karakterler[rastgeleIndex];
    }
    return sifre;
  }
  
  console.log("Yeni ÅŸifre:", rastgeleSifreUret(10)); // Ã–rnek: G4b9XzQ1Lk
  